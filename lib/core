#!/usr/bin/env bash

FILE_NAME=${1}
VERBOSE_MODE=${2}
OPTIONS=${3}
VERBOSE=${VERBOSE_MODE:-1}

MKTEMP=mktemp
SED=sed
CAT=cat
RM=rm

RHINO="$JSLINTR_LIB/rhino/js.jar"
JSLINT="$JSLINTR_LIB/jslint/jslint.js"
RHINO_JSLINT="$JSLINTR_LIB/rhino_jslint.js"

GREEN="\e[0;32m"
RED="\e[0;31m"
NC="\e[0m"

function has_jslint_errors () {
  LINTRESULTS="${1}"

  JSLINT_INDEX=$(expr "$LINTRESULTS" : "OK")

  if [ "$JSLINT_INDEX" -eq 0 ]
  then 
      return 0
  else
      return 1
  fi 
}

function verbose_output () {
  # naming parameters
  FILENAME="${1}"
  LINTRESULTS="${2}"

  if has_jslint_errors "$LINTRESULTS"
  then
      RESULT="${RED}FAIL${NC} - $LINTRESULTS\n\n"
  else
      RESULT="${GREEN}OK${NC}\n"
  fi

  echo "     - $(ls ${FILENAME}): ${RESULT}"
}

function concise_output () {
  # naming parameters
  FILENAME="${1}"
  LINTRESULTS="${2}"

  if has_jslint_errors "$LINTRESULTS"
  then
      RESULT="${RED}FAIL${NC} at ${FILENAME} - $LINTRESULTS\n\n"
  else
      RESULT="${GREEN}.${NC}"
  fi

  echo "${RESULT}"
}

function runjslint () {
  # naming parameters
  TEMP_FILE="${1}"
  REAL_FILE="${2}"

  LINT_RESULT=$(java -jar ${RHINO} -f ${JSLINT} ${RHINO_JSLINT} ${TEMP_FILE})

  if [ "$VERBOSE" -eq 0 ]
  then
      LINTR_RESULT=$(concise_output "${REAL_FILE}" "${LINT_RESULT}")
  else
      LINTR_RESULT=$(verbose_output "${REAL_FILE}" "${LINT_RESULT}")
  fi

  printf "$LINTR_RESULT"
}

TEMPFILE=$(${MKTEMP} /tmp/jslint.XXXXXXXXXX) && {
  echo "/*jslint ${OPTIONS} */" > "${TEMPFILE}"
  ${CAT} "${FILE_NAME}" >> "${TEMPFILE}"
  runjslint "${TEMPFILE}" "${FILE_NAME}"
  ${RM} -f "${TEMPFILE}"
}
